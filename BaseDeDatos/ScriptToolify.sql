/*SCRIPTS TOOLIFY*/
USE BD_TOOLIFY
GO

create or alter proc listarProveedores
as
begin
	SELECT pv.ID_PROVEEDOR, pv.RUC, pv.RAZON_SOCIAL, pv.TELEFONO, 
	pv.DIRECCION, dt.NOMBRE, pv.FECHA_REGISTRO, pv.ESTADO FROM TB_PROVEEDOR pv
	INNER JOIN TB_DISTRITO dt ON pv.ID_DISTRITO = dt.ID_DISTRITO where pv.ESTADO = 1
end
go

create or alter proc crudProveedores
@tipo varchar(50),
@idProveedor int = 0,
@ruc char(11) = '',
@razon varchar(100) = '',
@telefono char(15) = '',
@direccion varchar(80) = '',
@idDistrito int = 0,
@fecha datetime = null,
@estado bit = 1
as 
begin
	if @tipo = 'registrar'
		begin
			insert into TB_PROVEEDOR(RUC, RAZON_SOCIAL, TELEFONO, DIRECCION, ID_DISTRITO, FECHA_REGISTRO,ESTADO)
			values (@ruc,@razon,@telefono,@direccion,@idDistrito,@fecha,1);
			select @@IDENTITY
		end
	
	if @tipo = 'actualizar'
		begin
			update TB_PROVEEDOR 
			set RUC = @ruc, RAZON_SOCIAL = @razon,TELEFONO= @telefono,DIRECCION = @direccion,
			ID_DISTRITO=@idDistrito,FECHA_REGISTRO = @fecha ,estado = 1
			where ID_PROVEEDOR = @idProveedor
		end
	
	if @tipo = 'detalle'
		begin
			select ID_PROVEEDOR, RUC, RAZON_SOCIAL, TELEFONO, DIRECCION, ID_DISTRITO, FECHA_REGISTRO, ESTADO
			from TB_PROVEEDOR where ID_PROVEEDOR = @idProveedor
		end

	if @tipo = 'desactivar'
		begin
			update TB_PROVEEDOR 
			set ESTADO = 0 where ID_PROVEEDOR = @idProveedor
		end
end
GO

CREATE OR ALTER PROC listarProductos
AS
BEGIN
	SELECT ID_PRODUCTO, NOMBRE, P.DESCRIPCION,P.ID_PROVEEDOR, PRO.RAZON_SOCIAL,
	P.ID_CATEGORIA,CAT.DESCRIPCION ,PRECIO,STOCK, IMAGEN, P.FECHA_REGISTRO, P.ESTADO
	FROM TB_PRODUCTO P
	JOIN TB_PROVEEDOR PRO ON P.ID_PROVEEDOR = PRO.ID_PROVEEDOR
	JOIN TB_CATEGORIA CAT ON P.ID_CATEGORIA = CAT.ID_CATEGORIA 
	WHERE P.ESTADO = 1
END
GO

CREATE OR ALTER PROC listarCategorias
AS
BEGIN
	SELECT ID_CATEGORIA,DESCRIPCION FROM TB_CATEGORIA
END
GO

CREATE OR ALTER PROC top4CategoriasMasVendidas
AS
BEGIN
 SELECT TOP 4
        c.ID_CATEGORIA AS idCategoria,
        c.descripcion AS categoria,
        COALESCE(SUM(dv.cantidad), 0) AS cantidadVendida,
        (
            SELECT COUNT(*) 
            FROM TB_PRODUCTO p2 
            WHERE p2.ID_CATEGORIA= c.ID_CATEGORIA
        ) AS cantidadProductos
    FROM TB_CATEGORIA c
    LEFT JOIN TB_PRODUCTO p ON p.ID_CATEGORIA = c.ID_CATEGORIA
    LEFT JOIN TB_DETALLE_VENTA dv ON dv.ID_PRODUCTO = p.ID_PRODUCTO
    GROUP BY c.ID_CATEGORIA, c.descripcion
    ORDER BY cantidadVendida DESC, c.ID_CATEGORIA DESC
END
GO

CREATE OR ALTER PROC listCliente
AS
BEGIN
	SELECT ID_USUARIO,NOMBRES,APE_MATERNO,APE_PATERNO,CORREO, CLAVE, NRO_DOC,DIRECCION, U.ID_DISTRITO, D.NOMBRE, U.ROL, R.DESCRIPCION,
	FECHA_REGISTRO, TELEFONO
	FROM TB_USUARIO U
	JOIN TB_DISTRITO D ON D.ID_DISTRITO = U.ID_DISTRITO
	JOIN TB_ROL R ON R.ID_ROL = U.ROL
	WHERE ROL = 2
END
GO

CREATE OR ALTER PROC agregarVenta
    @ID_VENTA INT OUTPUT,
    @ID_USUARIO INT,
    @TOTAL DECIMAL(11,2),
    @TIPO_VENTA CHAR(1)
AS
BEGIN
    INSERT INTO TB_VENTA (ID_USUARIO, TOTAL, TIPO_VENTA, ESTADO)
    VALUES (@ID_USUARIO, @TOTAL, @TIPO_VENTA, 'P');

    SET @ID_VENTA = SCOPE_IDENTITY(); 
END
GO

CREATE OR ALTER PROC detalleVenta
    @ID_VENTA INT,
    @ID_PRODUCTO INT,
    @CANTIDAD INT,
	@SUB_TOTAL DECIMAL(10,2)
AS
BEGIN
    INSERT INTO TB_DETALLE_VENTA (ID_VENTA, ID_PRODUCTO, CANTIDAD, SUB_TOTAL)
    VALUES (@ID_VENTA, @ID_PRODUCTO, @CANTIDAD, @SUB_TOTAL);
END
GO

CREATE OR ALTER PROC obtenerCompraPorIdCliente
    @ID_USUARIO INT
AS
BEGIN
    SELECT 
        V.ID_VENTA,
        V.FECHA,
        V.TOTAL,
        V.ESTADO,
        V.TIPO_VENTA,
        DV.ID_PRODUCTO,
        P.NOMBRE AS NOMBRE_PRODUCTO,
		P.PRECIO,
        DV.CANTIDAD,
        DV.SUB_TOTAL
    FROM TB_VENTA V
    INNER JOIN TB_DETALLE_VENTA DV ON V.ID_VENTA = DV.ID_VENTA
    INNER JOIN TB_PRODUCTO P ON DV.ID_PRODUCTO = P.ID_PRODUCTO
    WHERE V.ID_USUARIO = @ID_USUARIO
    ORDER BY V.FECHA DESC
END
GO
